{"ast":null,"code":"var _jsxFileName = \"/Users/guidogreco/Udemy/React/Router/Proyecto Quotes/09-time-to-practice-starting-code/src/pages/AllQuotes.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport QuoteList from '../components/quotes/QuoteList';\nimport useHttp from '../hooks/use-http';\nimport { getAllQuotes } from '../lib/api';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AllQuotes = () => {\n  _s();\n\n  const {\n    sendRequest,\n    status,\n    data: loadedQuotes,\n    error\n  } = useHttp(getAllQuotes, true);\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === 'pending') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 16\n    }, this);\n  }\n\n  ;\n\n  if (status === 'error') {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered focused\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 16\n    }, this);\n  }\n\n  ;\n\n  if (status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)) {\n    return /*#__PURE__*/_jsxDEV(NoQuotesFound, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(QuoteList, {\n    quotes: loadedQuotes\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 12\n  }, this);\n};\n\n_s(AllQuotes, \"Sn2QGCbJGjm/GjrACrT5qb4lH3A=\", false, function () {\n  return [useHttp];\n});\n\n_c = AllQuotes;\nexport default AllQuotes;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllQuotes\");","map":{"version":3,"sources":["/Users/guidogreco/Udemy/React/Router/Proyecto Quotes/09-time-to-practice-starting-code/src/pages/AllQuotes.js"],"names":["useEffect","QuoteList","useHttp","getAllQuotes","LoadingSpinner","NoQuotesFound","AllQuotes","sendRequest","status","data","loadedQuotes","error","length"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AAEA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,aAAP,MAA0B,oCAA1B;;;AAIA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM;AAACC,IAAAA,WAAD;AAAcC,IAAAA,MAAd;AAAsBC,IAAAA,IAAI,EAAEC,YAA5B;AAA0CC,IAAAA;AAA1C,MAAmDT,OAAO,CAACC,YAAD,EAAe,IAAf,CAAhE;AACAH,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,WAAW;AACd,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;;AAIA,MAAIC,MAAM,KAAK,SAAf,EAA0B;AACtB,wBAAO;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACH,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,YAAP;AAGH;;AAAA;;AAED,MAAIA,MAAM,KAAK,OAAf,EAAwB;AACpB,wBAAO;AAAG,MAAA,SAAS,EAAC,kBAAb;AAAA,gBAAiCG;AAAjC;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAAA;;AAED,MAAIH,MAAM,KAAM,WAAZ,KAA4B,CAACE,YAAD,IAAiBA,YAAY,CAACE,MAAb,KAAwB,CAArE,CAAJ,EAA6E;AACzE,wBAAO,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAGD,sBAAO,QAAC,SAAD;AAAW,IAAA,MAAM,EAAEF;AAAnB;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAtBD;;GAAMJ,S;UACuDJ,O;;;KADvDI,S;AAyBN,eAAeA,SAAf","sourcesContent":["import { useEffect } from 'react';\n\nimport QuoteList from '../components/quotes/QuoteList';\nimport useHttp from '../hooks/use-http';\nimport { getAllQuotes } from '../lib/api';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\nimport NoQuotesFound from '../components/quotes/NoQuotesFound'\n\n\n\nconst AllQuotes = () => {\n    const {sendRequest, status, data: loadedQuotes, error} = useHttp(getAllQuotes, true);\n    useEffect(() => {\n        sendRequest()\n    }, [sendRequest]);\n\n    if (status === 'pending') {\n        return <div className='centered'>\n            <LoadingSpinner />\n        </div>\n    };\n\n    if (status === 'error') {\n        return <p className='centered focused'>{error}</p>\n    };\n\n    if (status ===  'completed' && (!loadedQuotes || loadedQuotes.length === 0)) {\n        return <NoQuotesFound />;\n    }\n    \n\n    return <QuoteList quotes={loadedQuotes}/>\n};\n\n\nexport default AllQuotes;"]},"metadata":{},"sourceType":"module"}