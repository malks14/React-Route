{"ast":null,"code":"import{Fragment,useEffect}from\"react\";import{Route,useParams,Link,useRouteMatch}from\"react-router-dom\";import useHttp from\"../hooks/use-http\";import{getSingleQuote}from\"../lib/api\";import HighlightedQuote from\"../components/quotes/HighlightedQuote\";import Comments from\"../components/comments/Comments\";import LoadingSpinner from\"../components/UI/LoadingSpinner\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var QuoteDetail=function QuoteDetail(){var match=useRouteMatch();var params=useParams();var quoteId=params.quoteId;var _useHttp=useHttp(getSingleQuote,true),sendRequest=_useHttp.sendRequest,status=_useHttp.status,loadedQuote=_useHttp.data,error=_useHttp.error;useEffect(function(){sendRequest(quoteId);},[sendRequest,quoteId]);if(status==='pending'){return/*#__PURE__*/_jsx(\"div\",{className:\"centered\",children:/*#__PURE__*/_jsx(LoadingSpinner,{})});};if(error){return/*#__PURE__*/_jsx(\"p\",{className:\"centered\",children:error});}if(loadedQuote.text){return/*#__PURE__*/_jsx(\"p\",{children:\"No quote found\"});}return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(HighlightedQuote,{text:loadedQuote.text,author:loadedQuote.author}),/*#__PURE__*/_jsx(Route,{path:match.path,exact:true,children:/*#__PURE__*/_jsx(\"div\",{className:\"centered\",children:/*#__PURE__*/_jsx(Link,{className:\"btn--flat\",to:\"\".concat(match.url,\"/comments\"),children:\"Load Comments\"})})}),/*#__PURE__*/_jsx(Route,{path:\"\".concat(match.path,\"/comments\"),children:/*#__PURE__*/_jsx(Comments,{})})]});};export default QuoteDetail;","map":{"version":3,"sources":["/Users/guidogreco/Udemy/React/Router/Proyecto Quotes/09-time-to-practice-starting-code/src/pages/QuoteDetail.js"],"names":["Fragment","useEffect","Route","useParams","Link","useRouteMatch","useHttp","getSingleQuote","HighlightedQuote","Comments","LoadingSpinner","QuoteDetail","match","params","quoteId","sendRequest","status","loadedQuote","data","error","text","author","path","url"],"mappings":"AAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,OAASC,KAAT,CAAgBC,SAAhB,CAA2BC,IAA3B,CAAiCC,aAAjC,KAAsD,kBAAtD,CAEA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,OAASC,cAAT,KAA+B,YAA/B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,uCAA7B,CACA,MAAOC,CAAAA,QAAP,KAAqB,iCAArB,CACA,MAAOC,CAAAA,cAAP,KAA2B,iCAA3B,C,wFAGA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACtB,GAAMC,CAAAA,KAAK,CAAGP,aAAa,EAA3B,CACA,GAAMQ,CAAAA,MAAM,CAAGV,SAAS,EAAxB,CAEA,GAAOW,CAAAA,OAAP,CAAkBD,MAAlB,CAAOC,OAAP,CAEA,aAAwDR,OAAO,CAACC,cAAD,CAAiB,IAAjB,CAA/D,CAAOQ,WAAP,UAAOA,WAAP,CAAoBC,MAApB,UAAoBA,MAApB,CAAkCC,WAAlC,UAA4BC,IAA5B,CAA+CC,KAA/C,UAA+CA,KAA/C,CAEAlB,SAAS,CAAC,UAAM,CACZc,WAAW,CAACD,OAAD,CAAX,CACH,CAFQ,CAEN,CAACC,WAAD,CAAcD,OAAd,CAFM,CAAT,CAIA,GAAIE,MAAM,GAAK,SAAf,CAA0B,CACtB,mBAAO,YAAK,SAAS,CAAC,UAAf,uBACH,KAAC,cAAD,IADG,EAAP,CAGH,EAED,GAAIG,KAAJ,CAAW,CACP,mBAAO,UAAG,SAAS,CAAC,UAAb,UAAyBA,KAAzB,EAAP,CACH,CAED,GAAIF,WAAW,CAACG,IAAhB,CAAsB,CAClB,mBAAO,qCAAP,CACH,CAED,mBACI,MAAC,QAAD,yBACI,KAAC,gBAAD,EAAkB,IAAI,CAAEH,WAAW,CAACG,IAApC,CAA0C,MAAM,CAAEH,WAAW,CAACI,MAA9D,EADJ,cAEI,KAAC,KAAD,EAAO,IAAI,CAAET,KAAK,CAACU,IAAnB,CAAyB,KAAK,KAA9B,uBACI,YAAK,SAAS,CAAC,UAAf,uBACI,KAAC,IAAD,EAAM,SAAS,CAAC,WAAhB,CAA4B,EAAE,WAAKV,KAAK,CAACW,GAAX,aAA9B,2BADJ,EADJ,EAFJ,cAOI,KAAC,KAAD,EAAO,IAAI,WAAKX,KAAK,CAACU,IAAX,aAAX,uBACI,KAAC,QAAD,IADJ,EAPJ,GADJ,CAaH,CAvCD,CA0CA,cAAeX,CAAAA,WAAf","sourcesContent":["import { Fragment, useEffect } from \"react\";\nimport { Route, useParams, Link, useRouteMatch } from \"react-router-dom\";\n\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport Comments from \"../components/comments/Comments\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\n\n\nconst QuoteDetail = () => {\n    const match = useRouteMatch();\n    const params = useParams();\n\n    const {quoteId} = params;\n\n    const {sendRequest, status, data: loadedQuote, error} = useHttp(getSingleQuote, true);\n\n    useEffect(() => {\n        sendRequest(quoteId);\n    }, [sendRequest, quoteId]);\n\n    if (status === 'pending') {\n        return <div className='centered'>\n            <LoadingSpinner />\n        </div>\n    };\n\n    if (error) {\n        return <p className='centered'>{error}</p>\n    }\n\n    if (loadedQuote.text) {\n        return <p>No quote found</p>\n    }\n\n    return (\n        <Fragment>\n            <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author}/>\n            <Route path={match.path} exact>\n                <div className='centered'>\n                    <Link className='btn--flat' to={`${match.url}/comments`}>Load Comments</Link>\n                </div>\n            </Route>\n            <Route path={`${match.path}/comments`}>\n                <Comments />\n            </Route>\n        </Fragment>\n    )\n};\n\n\nexport default QuoteDetail;"]},"metadata":{},"sourceType":"module"}