{"ast":null,"code":"import{useEffect}from'react';import{useHistory}from'react-router-dom';import useHttp from'../hooks/use-http';import QuoteForm from'../components/quotes/QuoteForm';import{addQuote}from'../lib/api';import{jsx as _jsx}from\"react/jsx-runtime\";var NewQuote=function NewQuote(){var history=useHistory();var _useHttp=useHttp(addQuote),sendRequest=_useHttp.sendRequest,status=_useHttp.status;useEffect(function(){if(status==='completed'){history.push('/quotes');}},[status,history]);var addQuoteHandler=function addQuoteHandler(quoteData){sendRequest(quoteData);};return/*#__PURE__*/_jsx(QuoteForm,{isLoading:status==='pending',onAddQuote:addQuoteHandler});};export default NewQuote;","map":{"version":3,"sources":["/Users/guidogreco/Udemy/React/Router/Proyecto Quotes/09-time-to-practice-starting-code/src/pages/NewQuote.js"],"names":["useEffect","useHistory","useHttp","QuoteForm","addQuote","NewQuote","history","sendRequest","status","push","addQuoteHandler","quoteData"],"mappings":"AAAA,OAASA,SAAT,KAA0B,OAA1B,CACA,OAASC,UAAT,KAA2B,kBAA3B,CAEA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,MAAOC,CAAAA,SAAP,KAAsB,gCAAtB,CACA,OAASC,QAAT,KAAyB,YAAzB,C,2CAGA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACnB,GAAMC,CAAAA,OAAO,CAAGL,UAAU,EAA1B,CACA,aAA+BC,OAAO,CAACE,QAAD,CAAtC,CAAOG,WAAP,UAAOA,WAAP,CAAoBC,MAApB,UAAoBA,MAApB,CAEAR,SAAS,CAAC,UAAM,CACZ,GAAIQ,MAAM,GAAK,WAAf,CAA4B,CACxBF,OAAO,CAACG,IAAR,CAAa,SAAb,EACH,CACJ,CAJQ,CAIN,CAACD,MAAD,CAASF,OAAT,CAJM,CAAT,CAMA,GAAMI,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,SAAS,CAAI,CACjCJ,WAAW,CAACI,SAAD,CAAX,CAEH,CAHD,CAKA,mBAAO,KAAC,SAAD,EAAW,SAAS,CAAEH,MAAM,GAAK,SAAjC,CAA4C,UAAU,CAAEE,eAAxD,EAAP,CACH,CAhBD,CAmBA,cAAeL,CAAAA,QAAf","sourcesContent":["import { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport useHttp from '../hooks/use-http'\nimport QuoteForm from '../components/quotes/QuoteForm';\nimport { addQuote } from '../lib/api';\n\n\nconst NewQuote = () => {\n    const history = useHistory();\n    const {sendRequest, status} =  useHttp(addQuote);\n\n    useEffect(() => {\n        if (status === 'completed') {\n            history.push('/quotes');\n        }\n    }, [status, history]);\n\n    const addQuoteHandler = quoteData => {\n        sendRequest(quoteData)\n\n    };\n\n    return <QuoteForm isLoading={status === 'pending'} onAddQuote={addQuoteHandler}/>\n};\n\n\nexport default NewQuote;"]},"metadata":{},"sourceType":"module"}